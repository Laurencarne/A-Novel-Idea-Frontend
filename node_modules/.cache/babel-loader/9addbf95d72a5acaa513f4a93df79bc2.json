{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      book: [],\n      image: {},\n      genre: [],\n      price: {}\n    };\n\n    this.renderCartButton = () => {\n      if (!this.props.usersCart.map(book => book.google_id).includes(this.props.match.params.id)) {\n        return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          onClick: this.handleCartClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \" Add to Cart \"));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(Link, {\n          to: \"/cart\",\n          style: {\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, \" View Cart \")));\n      }\n    };\n\n    this.handleCartClick = e => {\n      this.setState({\n        clicked: true\n      });\n      e.preventDefault();\n      this.addBookToServer(this.setBookDetails());\n    };\n\n    this.addBookToServer = book => {\n      return fetch(\"https://a-novel-idea.herokuapp.com/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      }).then(resp => resp.json()).then(console.log);\n    };\n\n    this.setBookDetails = () => {\n      const book = {\n        book: {\n          cart_id: 1,\n          google_id: this.props.match.params.id,\n          title: this.state.book.title,\n          author: this.state.book.authors.join(),\n          price: this.state.price.amount,\n          image: this.state.image.thumbnail,\n          publisher: this.state.book.publisher,\n          description: this.state.book.description,\n          genre: this.state.genre,\n          publishedDate: this.state.book.publishedDate,\n          pageCount: this.state.book.pageCount\n        }\n      };\n      return book;\n    };\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + \"/\".concat(this.props.match.params.id)).then(resp => resp.json()).then(data => this.setState({\n      book: data.volumeInfo,\n      image: data.volumeInfo.imageLinks,\n      genre: data.volumeInfo.categories[0],\n      price: data.saleInfo.listPrice\n    }));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bookTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.book.title), React.createElement(\"img\", {\n      className: \"bookImage\",\n      src: this.state.image.thumbnail,\n      alt: this.state.book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"bookAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, this.state.book.authors), React.createElement(\"p\", {\n      className: \"bookPriceLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"\\xA3\", this.state.price.amount), React.createElement(\"h3\", {\n      className: \"bookPublisher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Publisher: \", this.state.book.publisher), React.createElement(\"h4\", {\n      className: \"bookPublishedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Published: \", this.state.book.publishedDate), React.createElement(\"h6\", {\n      className: \"bookPageCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Page Count: \", this.state.book.pageCount), React.createElement(\"h6\", {\n      className: \"bookGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \" Genres: \", this.state.genre), React.createElement(\"p\", {\n      className: \"bookDescription\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.book.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.renderCartButton());\n  }\n\n}\n\nexport default BookInformation; // <button onClick={this.handleCartClick}> Add to Cart </button>","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js"],"names":["React","Component","Link","BASEURL","BookInformation","state","clicked","book","image","genre","price","renderCartButton","props","usersCart","map","google_id","includes","match","params","id","handleCartClick","textDecoration","e","setState","preventDefault","addBookToServer","setBookDetails","fetch","method","headers","body","JSON","stringify","then","resp","json","console","log","cart_id","title","author","authors","join","amount","thumbnail","publisher","description","publishedDate","pageCount","componentDidMount","data","volumeInfo","imageLinks","categories","saleInfo","listPrice","render","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,OAAO,GAAG,6CAAhB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,KAAK,EAAE;AALD,KAD8B;;AAAA,SAsBtCC,gBAtBsC,GAsBnB,MAAM;AACvB,UACE,CAAC,KAAKC,KAAL,CAAWC,SAAX,CACEC,GADF,CACMP,IAAI,IAAIA,IAAI,CAACQ,SADnB,EAEEC,QAFF,CAEW,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAFnC,CADH,EAIE;AACA,eACE,0CACE;AAAQ,UAAA,OAAO,EAAE,KAAKC,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF;AAKD,OAVD,MAUO;AACL,eACE,0CACE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,OAAT;AAAiB,UAAA,KAAK,EAAE;AAAEC,YAAAA,cAAc,EAAE;AAAlB,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF,CADF;AAOD;AACF,KA1CqC;;AAAA,SA8DtCD,eA9DsC,GA8DpBE,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZjB,QAAAA,OAAO,EAAE;AADG,OAAd;AAIAgB,MAAAA,CAAC,CAACE,cAAF;AAEA,WAAKC,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACD,KAtEqC;;AAAA,SAwEtCD,eAxEsC,GAwEpBlB,IAAI,IAAI;AACxB,aAAOoB,KAAK,gCAAgC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAezB,IAAf;AALoC,OAAhC,CAAL,CAOJ0B,IAPI,CAOCC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAPT,EAQJF,IARI,CAQCG,OAAO,CAACC,GART,CAAP;AASD,KAlFqC;;AAAA,SAoGtCX,cApGsC,GAoGrB,MAAM;AACrB,YAAMnB,IAAI,GAAG;AACXA,QAAAA,IAAI,EAAE;AACJ+B,UAAAA,OAAO,EAAE,CADL;AAEJvB,UAAAA,SAAS,EAAE,KAAKH,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAF/B;AAGJoB,UAAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWE,IAAX,CAAgBgC,KAHnB;AAIJC,UAAAA,MAAM,EAAE,KAAKnC,KAAL,CAAWE,IAAX,CAAgBkC,OAAhB,CAAwBC,IAAxB,EAJJ;AAKJhC,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBiC,MALpB;AAMJnC,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiBoC,SANpB;AAOJC,UAAAA,SAAS,EAAE,KAAKxC,KAAL,CAAWE,IAAX,CAAgBsC,SAPvB;AAQJC,UAAAA,WAAW,EAAE,KAAKzC,KAAL,CAAWE,IAAX,CAAgBuC,WARzB;AASJrC,UAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KATd;AAUJsC,UAAAA,aAAa,EAAE,KAAK1C,KAAL,CAAWE,IAAX,CAAgBwC,aAV3B;AAWJC,UAAAA,SAAS,EAAE,KAAK3C,KAAL,CAAWE,IAAX,CAAgByC;AAXvB;AADK,OAAb;AAeA,aAAOzC,IAAP;AACD,KArHqC;AAAA;;AAStC0C,EAAAA,iBAAiB,GAAG;AAClBtB,IAAAA,KAAK,CAACxB,OAAO,cAAO,KAAKS,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/B,CAAR,CAAL,CACGc,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQiB,IAAI,IACR,KAAK3B,QAAL,CAAc;AACZhB,MAAAA,IAAI,EAAE2C,IAAI,CAACC,UADC;AAEZ3C,MAAAA,KAAK,EAAE0C,IAAI,CAACC,UAAL,CAAgBC,UAFX;AAGZ3C,MAAAA,KAAK,EAAEyC,IAAI,CAACC,UAAL,CAAgBE,UAAhB,CAA2B,CAA3B,CAHK;AAIZ3C,MAAAA,KAAK,EAAEwC,IAAI,CAACI,QAAL,CAAcC;AAJT,KAAd,CAHJ;AAUD;;AAmGDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKnD,KAAL,CAAWE,IAAX,CAAgBgC,KAA3C,CADF,EAEE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAE,KAAKlC,KAAL,CAAWG,KAAX,CAAiBoC,SAFxB;AAGE,MAAA,GAAG,EAAE,KAAKvC,KAAL,CAAWE,IAAX,CAAgBgC,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKlC,KAAL,CAAWE,IAAX,CAAgBkC,OAA5C,CAPF,EAQE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+B,KAAKpC,KAAL,CAAWK,KAAX,CAAiBiC,MAAhD,CARF,EASE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAKtC,KAAL,CAAWE,IAAX,CAAgBsC,SAD9B,CATF,EAYE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAKxC,KAAL,CAAWE,IAAX,CAAgBwC,aAD9B,CAZF,EAeE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe,KAAK1C,KAAL,CAAWE,IAAX,CAAgByC,SAD/B,CAfF,EAkBE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC,KAAK3C,KAAL,CAAWI,KAA/C,CAlBF,EAmBE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAEgD,QAAAA,MAAM,EAAE,KAAKpD,KAAL,CAAWE,IAAX,CAAgBuC;AAA1B,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAuBG,KAAKnC,gBAAL,EAvBH,CADF;AA2BD;;AAnJqC;;AAsJxC,eAAeP,eAAf,C,CAEA","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  state = {\n    clicked: false,\n    book: [],\n    image: {},\n    genre: [],\n    price: {}\n  };\n\n  componentDidMount() {\n    fetch(BASEURL + `/${this.props.match.params.id}`)\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          book: data.volumeInfo,\n          image: data.volumeInfo.imageLinks,\n          genre: data.volumeInfo.categories[0],\n          price: data.saleInfo.listPrice\n        })\n      );\n  }\n\n  renderCartButton = () => {\n    if (\n      !this.props.usersCart\n        .map(book => book.google_id)\n        .includes(this.props.match.params.id)\n    ) {\n      return (\n        <>\n          <button onClick={this.handleCartClick}> Add to Cart </button>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\n            <button> View Cart </button>\n          </Link>\n        </>\n      );\n    }\n  };\n\n  // renderWishButton = () => {\n  //   if (!localStorage.getItem(\"basket\").includes(this.state.id)) {\n  //     return (\n  //       <>\n  //         <button onClick={this.handleWishClick}> Add to WishList </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <Link to=\"/wishlists\" style={{ textDecoration: \"none\" }}>\n  //           <button> View WishList </button>{\" \"}\n  //         </Link>\n  //       </>\n  //     );\n  //   }\n  // };\n\n  handleCartClick = e => {\n    this.setState({\n      clicked: true\n    });\n\n    e.preventDefault();\n\n    this.addBookToServer(this.setBookDetails());\n  };\n\n  addBookToServer = book => {\n    return fetch(`https://a-novel-idea.herokuapp.com/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    })\n      .then(resp => resp.json())\n      .then(console.log);\n  };\n\n  // handleWishClick = e => {\n  //   console.log(\"Clicked\");\n  //   e.preventDefault();\n  //   this.addBookToServerWishlist(this.setBookDetails());\n  // };\n  //\n  // addBookToServerWishlist = book => {\n  //   return fetch(`https://a-novel-idea.herokuapp.com/wishlists`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(book)\n  //   }).then(resp => resp.json());\n  // };\n\n  setBookDetails = () => {\n    const book = {\n      book: {\n        cart_id: 1,\n        google_id: this.props.match.params.id,\n        title: this.state.book.title,\n        author: this.state.book.authors.join(),\n        price: this.state.price.amount,\n        image: this.state.image.thumbnail,\n        publisher: this.state.book.publisher,\n        description: this.state.book.description,\n        genre: this.state.genre,\n        publishedDate: this.state.book.publishedDate,\n        pageCount: this.state.book.pageCount\n      }\n    };\n    return book;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"bookTitle\">{this.state.book.title}</h1>\n        <img\n          className=\"bookImage\"\n          src={this.state.image.thumbnail}\n          alt={this.state.book.title}\n        />\n        <h2 className=\"bookAuthor\">{this.state.book.authors}</h2>\n        <p className=\"bookPriceLink\">£{this.state.price.amount}</p>\n        <h3 className=\"bookPublisher\">\n          Publisher: {this.state.book.publisher}\n        </h3>\n        <h4 className=\"bookPublishedDate\">\n          Published: {this.state.book.publishedDate}\n        </h4>\n        <h6 className=\"bookPageCount\">\n          Page Count: {this.state.book.pageCount}\n        </h6>\n        <h6 className=\"bookGenre\"> Genres: {this.state.genre}</h6>\n        <p\n          className=\"bookDescription\"\n          dangerouslySetInnerHTML={{ __html: this.state.book.description }}\n        />\n        {this.renderCartButton()}\n      </div>\n    );\n  }\n}\n\nexport default BookInformation;\n\n// <button onClick={this.handleCartClick}> Add to Cart </button>\n"]},"metadata":{},"sourceType":"module"}