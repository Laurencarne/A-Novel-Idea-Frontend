{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/A_Novel_Idea_Frontend/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\";\nimport Login from \"../components/Login\";\nimport Orders from \"../components/Orders\";\nimport OrderInformation from \"../components/OrderInformation\";\nimport Cart from \"../components/Cart\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Fiction from \"../components/Fiction\";\nimport BookInformation from \"../components/BookInformation\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.fetchUsersFromServer = () => fetch(\"http://localhost:3000/users/1\").then(resp => resp.json());\n\n    this.addUserToState = () => data => this.setState({\n      currentUser: data,\n      currentUsersOrders: data.orders,\n      currentUsersWishlist: data.wishlist.wish_books,\n      currentUsersCartBooks: data.cart.cart_books\n    });\n\n    this.fetchBooksFromSever = () => {\n      return fetch(BASEURL + '?q=\"\"&printType=books&orderBy=newest&startIndex=1&maxResults=40&langRestrict=en').then(resp => resp.json());\n    };\n\n    this.fetchFilteredBooksForBookbarFromServer = genre => {\n      return fetch(BASEURL + \"?q=%22%22+subject:\\\"\".concat(genre, \"\\\"&printType=books&orderBy=newest&maxResults=40&langRestrict=en\")).then(resp => resp.json());\n    };\n\n    this.addVerifiedBooksToState = (data, category) => {\n      return data => data.items.map(book => {\n        if (book.saleInfo.listPrice && book.volumeInfo.title && book.volumeInfo.authors && book.volumeInfo.publisher && book.volumeInfo.publishedDate && book.volumeInfo.description && book.volumeInfo.imageLinks && book.searchInfo && book.searchInfo.textSnippet) {\n          if (category === \"books\") {\n            this.setBooksState(book);\n          } else if (category === \"Fiction\") {\n            this.setFictionBooksState(book);\n          } else if (category === \"Juvenile Fiction\") {\n            this.setJuvenileFictionBooksState(book);\n          } else if (category === \"Education\") {\n            this.setEducationBooksState(book);\n          }\n        }\n      });\n    };\n\n    this.setBooksState = book => {\n      this.setState({\n        books: [...this.state.books, book]\n      });\n    };\n\n    this.setFictionBooksState = book => {\n      this.setState({\n        fictionBooks: [...this.state.fictionBooks, book]\n      });\n    };\n\n    this.setJuvenileFictionBooksState = book => {\n      this.setState({\n        juvenileFiction: [...this.state.juvenileFiction, book]\n      });\n    };\n\n    this.setEducationBooksState = book => {\n      this.setState({\n        education: [...this.state.education, book]\n      });\n    };\n\n    this.getFilteredBooksFromServer = searchTerm => {\n      return fetch(BASEURL + \"?q=\\\"\\\"+intitle:\\\"\".concat(searchTerm, \"\\\"&printType=books&orderBy=newest&startIndex=1&maxResults=40&langRestrict=en\")).then(resp => resp.json()).then(this.setState({\n        books: []\n      })).then(this.addVerifiedBooksToState(\"data\", \"books\"));\n    };\n\n    this.resetBooks = () => {\n      this.fetchBooksFromSever().then(this.setState({\n        books: []\n      })).then(this.addVerifiedBooksToState());\n    };\n\n    this.setSortBy = e => {\n      this.setState({\n        sortBy: e.target.value\n      });\n    };\n\n    this.getSortedBooks = () => {\n      if (this.state.sortBy === \"Alphabetically\") {\n        return this.state.books.sort((a, b) => a.volumeInfo.title.localeCompare(b.volumeInfo.title));\n      } else if (this.state.sortBy === \"Price\") {\n        return this.state.books.sort((a, b) => a.saleInfo.retailPrice.amount - b.saleInfo.retailPrice.amount);\n      } else if (this.state.sortBy === \"All\") {\n        return this.state.books;\n      }\n    };\n\n    this.updateStateInformation = cart => {\n      this.fetchUsersFromServer().then(this.addUserToState());\n    };\n\n    this.state = {\n      books: [],\n      fictionBooks: [],\n      juvenileFiction: [],\n      education: [],\n      currentUser: {},\n      currentUsersOrders: [],\n      currentUsersWishlist: [],\n      currentUsersCartBooks: [],\n      sortBy: \"All\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBooksFromSever().then(this.addVerifiedBooksToState(\"data\", \"books\"));\n    this.fetchUsersFromServer().then(this.addUserToState());\n    this.fetchFilteredBooksForBookbarFromServer(\"Fiction\").then(this.addVerifiedBooksToState(\"data\", \"Fiction\"));\n    this.fetchFilteredBooksForBookbarFromServer(\"Juvenile Fiction\").then(this.addVerifiedBooksToState(\"data\", \"Juvenile Fiction\"));\n    this.fetchFilteredBooksForBookbarFromServer(\"Education\").then(this.addVerifiedBooksToState(\"data\", \"Education\"));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Home, {\n        books: this.state.fictionBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      exact: true,\n      render: () => React.createElement(Login, {\n        fetchUsers: this.fetchUsers,\n        setUser: this.setUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books\",\n      exact: true,\n      render: props => React.createElement(Books, Object.assign({}, props, {\n        books: this.getSortedBooks(),\n        getFilteredBooksFromServer: this.getFilteredBooksFromServer,\n        resetBooks: this.resetBooks,\n        setSortBy: this.setSortBy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/fiction\",\n      exact: true,\n      render: () => React.createElement(Fiction, {\n        books: this.state.fiction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books/:id\",\n      exact: true,\n      render: props => React.createElement(BookInformation, Object.assign({}, props, {\n        usersCart: this.state.currentUsersCartBooks,\n        updateInformation: this.updateStateInformation,\n        usersWishlist: this.state.currentUsersWishlist,\n        currentUser: this.state.currentUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/orders\",\n      exact: true,\n      render: () => React.createElement(Orders, {\n        user: this.state.currentUser,\n        orders: this.state.currentUsersOrders,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/orders/:id\",\n      exact: true,\n      component: OrderInformation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/cart\",\n      exact: true,\n      render: () => React.createElement(Cart, {\n        updateCart: this.updateStateInformation,\n        user: this.state.currentUser,\n        cartBooks: this.state.currentUsersCartBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/wishlists\",\n      exact: true,\n      render: () => React.createElement(Wishlists, {\n        updateWishlist: this.updateStateInformation,\n        user: this.state.currentUser,\n        wishlist: this.state.currentUsersWishlist,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/A_Novel_Idea_Frontend/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","NavBar","Footer","Home","Login","Orders","OrderInformation","Cart","Wishlists","Books","Fiction","BookInformation","BASEURL","App","constructor","fetchUsersFromServer","fetch","then","resp","json","addUserToState","data","setState","currentUser","currentUsersOrders","orders","currentUsersWishlist","wishlist","wish_books","currentUsersCartBooks","cart","cart_books","fetchBooksFromSever","fetchFilteredBooksForBookbarFromServer","genre","addVerifiedBooksToState","category","items","map","book","saleInfo","listPrice","volumeInfo","title","authors","publisher","publishedDate","description","imageLinks","searchInfo","textSnippet","setBooksState","setFictionBooksState","setJuvenileFictionBooksState","setEducationBooksState","books","state","fictionBooks","juvenileFiction","education","getFilteredBooksFromServer","searchTerm","resetBooks","setSortBy","e","sortBy","target","value","getSortedBooks","sort","a","b","localeCompare","retailPrice","amount","updateStateInformation","componentDidMount","render","fetchUsers","setUser","props","fiction"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\";\nimport Login from \"../components/Login\";\nimport Orders from \"../components/Orders\";\nimport OrderInformation from \"../components/OrderInformation\";\nimport Cart from \"../components/Cart\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Fiction from \"../components/Fiction\";\nimport BookInformation from \"../components/BookInformation\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      books: [],\n      fictionBooks: [],\n      juvenileFiction: [],\n      education: [],\n      currentUser: {},\n      currentUsersOrders: [],\n      currentUsersWishlist: [],\n      currentUsersCartBooks: [],\n      sortBy: \"All\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBooksFromSever().then(\n      this.addVerifiedBooksToState(\"data\", \"books\")\n    );\n    this.fetchUsersFromServer().then(this.addUserToState());\n    this.fetchFilteredBooksForBookbarFromServer(\"Fiction\").then(\n      this.addVerifiedBooksToState(\"data\", \"Fiction\")\n    );\n    this.fetchFilteredBooksForBookbarFromServer(\"Juvenile Fiction\").then(\n      this.addVerifiedBooksToState(\"data\", \"Juvenile Fiction\")\n    );\n    this.fetchFilteredBooksForBookbarFromServer(\"Education\").then(\n      this.addVerifiedBooksToState(\"data\", \"Education\")\n    );\n  }\n\n  fetchUsersFromServer = () =>\n    fetch(`http://localhost:3000/users/1`).then(resp => resp.json());\n\n  addUserToState = () => data =>\n    this.setState({\n      currentUser: data,\n      currentUsersOrders: data.orders,\n      currentUsersWishlist: data.wishlist.wish_books,\n      currentUsersCartBooks: data.cart.cart_books\n    });\n\n  fetchBooksFromSever = () => {\n    return fetch(\n      BASEURL +\n        '?q=\"\"&printType=books&orderBy=newest&startIndex=1&maxResults=40&langRestrict=en'\n    ).then(resp => resp.json());\n  };\n\n  fetchFilteredBooksForBookbarFromServer = genre => {\n    return fetch(\n      BASEURL +\n        `?q=%22%22+subject:\"${genre}\"&printType=books&orderBy=newest&maxResults=40&langRestrict=en`\n    ).then(resp => resp.json());\n  };\n\n  addVerifiedBooksToState = (data, category) => {\n    return data =>\n      data.items.map(book => {\n        if (\n          book.saleInfo.listPrice &&\n          book.volumeInfo.title &&\n          book.volumeInfo.authors &&\n          book.volumeInfo.publisher &&\n          book.volumeInfo.publishedDate &&\n          book.volumeInfo.description &&\n          book.volumeInfo.imageLinks &&\n          book.searchInfo &&\n          book.searchInfo.textSnippet\n        ) {\n          if (category === \"books\") {\n            this.setBooksState(book);\n          } else if (category === \"Fiction\") {\n            this.setFictionBooksState(book);\n          } else if (category === \"Juvenile Fiction\") {\n            this.setJuvenileFictionBooksState(book);\n          } else if (category === \"Education\") {\n            this.setEducationBooksState(book);\n          }\n        }\n      });\n  };\n\n  setBooksState = book => {\n    this.setState({\n      books: [...this.state.books, book]\n    });\n  };\n\n  setFictionBooksState = book => {\n    this.setState({\n      fictionBooks: [...this.state.fictionBooks, book]\n    });\n  };\n\n  setJuvenileFictionBooksState = book => {\n    this.setState({\n      juvenileFiction: [...this.state.juvenileFiction, book]\n    });\n  };\n\n  setEducationBooksState = book => {\n    this.setState({\n      education: [...this.state.education, book]\n    });\n  };\n\n  getFilteredBooksFromServer = searchTerm => {\n    return fetch(\n      BASEURL +\n        `?q=\"\"+intitle:\"${searchTerm}\"&printType=books&orderBy=newest&startIndex=1&maxResults=40&langRestrict=en`\n    )\n      .then(resp => resp.json())\n      .then(\n        this.setState({\n          books: []\n        })\n      )\n      .then(this.addVerifiedBooksToState(\"data\", \"books\"));\n  };\n\n  resetBooks = () => {\n    this.fetchBooksFromSever()\n      .then(\n        this.setState({\n          books: []\n        })\n      )\n      .then(this.addVerifiedBooksToState());\n  };\n\n  setSortBy = e => {\n    this.setState({ sortBy: e.target.value });\n  };\n\n  getSortedBooks = () => {\n    if (this.state.sortBy === \"Alphabetically\") {\n      return this.state.books.sort((a, b) =>\n        a.volumeInfo.title.localeCompare(b.volumeInfo.title)\n      );\n    } else if (this.state.sortBy === \"Price\") {\n      return this.state.books.sort(\n        (a, b) => a.saleInfo.retailPrice.amount - b.saleInfo.retailPrice.amount\n      );\n    } else if (this.state.sortBy === \"All\") {\n      return this.state.books;\n    }\n  };\n\n  updateStateInformation = cart => {\n    this.fetchUsersFromServer().then(this.addUserToState());\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={() => <Home books={this.state.fictionBooks} />}\n            />\n            <Route\n              path=\"/login\"\n              exact\n              render={() => (\n                <Login fetchUsers={this.fetchUsers} setUser={this.setUser} />\n              )}\n            />\n            <Route\n              path=\"/books\"\n              exact\n              render={props => (\n                <Books\n                  {...props}\n                  books={this.getSortedBooks()}\n                  getFilteredBooksFromServer={this.getFilteredBooksFromServer}\n                  resetBooks={this.resetBooks}\n                  setSortBy={this.setSortBy}\n                />\n              )}\n            />\n            <Route\n              path=\"/fiction\"\n              exact\n              render={() => <Fiction books={this.state.fiction} />}\n            />\n            <Route\n              path=\"/books/:id\"\n              exact\n              render={props => (\n                <BookInformation\n                  {...props}\n                  usersCart={this.state.currentUsersCartBooks}\n                  updateInformation={this.updateStateInformation}\n                  usersWishlist={this.state.currentUsersWishlist}\n                  currentUser={this.state.currentUser}\n                />\n              )}\n            />\n            <Route\n              path=\"/orders\"\n              exact\n              render={() => (\n                <Orders\n                  user={this.state.currentUser}\n                  orders={this.state.currentUsersOrders}\n                />\n              )}\n            />\n            <Route path=\"/orders/:id\" exact component={OrderInformation} />\n            <Route\n              path=\"/cart\"\n              exact\n              render={() => (\n                <Cart\n                  updateCart={this.updateStateInformation}\n                  user={this.state.currentUser}\n                  cartBooks={this.state.currentUsersCartBooks}\n                />\n              )}\n            />\n            <Route\n              path=\"/wishlists\"\n              exact\n              render={() => (\n                <Wishlists\n                  updateWishlist={this.updateStateInformation}\n                  user={this.state.currentUser}\n                  wishlist={this.state.currentUsersWishlist}\n                />\n              )}\n            />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}