{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      book: [],\n      image: {},\n      genre: [],\n      price: {},\n      id: \"\"\n    };\n\n    this.handleCartClick = e => {\n      this.setState({\n        clicked: true\n      });\n      console.log(\"Clicked\");\n      const cartbook = {\n        cart_id: 1,\n        book_id: this.state.book.id\n      };\n      e.preventDefault();\n      this.addBookToServer(this.setBookDetails());\n      this.addBookToCartOnServer(cartbook);\n    };\n\n    this.addBookToServer = book => {\n      return fetch(\"http://localhost:3000/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      });\n    };\n\n    this.addBookToCartOnServer = cartbook => {\n      return fetch(\"http://localhost:3000/cart_books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(cartbook)\n      });\n    };\n\n    this.setBookDetails = () => {\n      const book = {\n        title: this.state.book.title,\n        author: this.state.book.authors.join(),\n        price: this.state.price.amount,\n        image: this.state.image.thumbnail,\n        publisher: this.state.book.publisher,\n        description: this.state.book.description,\n        genre: this.state.genre,\n        publishedDate: this.state.book.publishedDate,\n        pageCount: this.state.book.pageCount\n      };\n      return book;\n    };\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + \"/\".concat(this.props.match.params.id)).then(resp => resp.json()).then(data => this.setState({\n      book: data.volumeInfo,\n      image: data.volumeInfo.imageLinks,\n      genre: data.volumeInfo.categories[0],\n      price: data.saleInfo.listPrice,\n      id: data.id\n    }));\n  } // renderCartButton = () => {\n  //   if (!localStorage.getItem(\"basket\").includes(this.state.id)) {\n  //     return (\n  //       <>\n  //         <button onClick={this.handleCartClick}> Add to Cart </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\n  //           <button> View Cart </button>\n  //         </Link>\n  //       </>\n  //     );\n  //   }\n  // };\n  // renderWishButton = () => {\n  //   if (!localStorage.getItem(\"basket\").includes(this.state.id)) {\n  //     return (\n  //       <>\n  //         <button onClick={this.handleWishClick}> Add to WishList </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <Link to=\"/wishlists\" style={{ textDecoration: \"none\" }}>\n  //           <button> View WishList </button>{\" \"}\n  //         </Link>\n  //       </>\n  //     );\n  //   }\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bookTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, this.state.book.title), React.createElement(\"img\", {\n      className: \"bookImage\",\n      src: this.state.image.thumbnail,\n      alt: this.state.book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"bookAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.state.book.authors), React.createElement(\"p\", {\n      className: \"bookPriceLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"\\xA3\", this.state.price.amount), React.createElement(\"h3\", {\n      className: \"bookPublisher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Publisher: \", this.state.book.publisher), React.createElement(\"h4\", {\n      className: \"bookPublishedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Published: \", this.state.book.publishedDate), React.createElement(\"h6\", {\n      className: \"bookPageCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Page Count: \", this.state.book.pageCount), React.createElement(\"h6\", {\n      className: \"bookGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \" Genres: \", this.state.genre), React.createElement(\"p\", {\n      className: \"bookDescription\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.book.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCartClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \" Add to Cart \"));\n  }\n\n}\n\nexport default BookInformation;","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js"],"names":["React","Component","Link","BASEURL","BookInformation","state","clicked","book","image","genre","price","id","handleCartClick","e","setState","console","log","cartbook","cart_id","book_id","preventDefault","addBookToServer","setBookDetails","addBookToCartOnServer","fetch","method","headers","body","JSON","stringify","title","author","authors","join","amount","thumbnail","publisher","description","publishedDate","pageCount","componentDidMount","props","match","params","then","resp","json","data","volumeInfo","imageLinks","categories","saleInfo","listPrice","render","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,MAAMC,OAAO,GAAG,6CAAhB;;AAEA,MAAMC,eAAN,SAA8BH,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCI,KADsC,GAC9B;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,KAAK,EAAE,EALD;AAMNC,MAAAA,EAAE,EAAE;AANE,KAD8B;;AAAA,SA4DtCC,eA5DsC,GA4DpBC,CAAC,IAAI;AACrB,WAAKC,QAAL,CAAc;AACZR,QAAAA,OAAO,EAAE;AADG,OAAd;AAGAS,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AAEA,YAAMC,QAAQ,GAAG;AACfC,QAAAA,OAAO,EAAE,CADM;AAEfC,QAAAA,OAAO,EAAE,KAAKd,KAAL,CAAWE,IAAX,CAAgBI;AAFV,OAAjB;AAKAE,MAAAA,CAAC,CAACO,cAAF;AAEA,WAAKC,eAAL,CAAqB,KAAKC,cAAL,EAArB;AACA,WAAKC,qBAAL,CAA2BN,QAA3B;AACD,KA3EqC;;AAAA,SA6EtCI,eA7EsC,GA6EpBd,IAAI,IAAI;AACxB,aAAOiB,KAAK,gCAAgC;AAC1CC,QAAAA,MAAM,EAAE,MADkC;AAE1CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFiC;AAK1CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,IAAf;AALoC,OAAhC,CAAZ;AAOD,KArFqC;;AAAA,SAuFtCgB,qBAvFsC,GAuFdN,QAAQ,IAAI;AAClC,aAAOO,KAAK,qCAAqC;AAC/CC,QAAAA,MAAM,EAAE,MADuC;AAE/CC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFsC;AAK/CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,QAAf;AALyC,OAArC,CAAZ;AAOD,KA/FqC;;AAAA,SAiHtCK,cAjHsC,GAiHrB,MAAM;AACrB,YAAMf,IAAI,GAAG;AACXuB,QAAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWE,IAAX,CAAgBuB,KADZ;AAEXC,QAAAA,MAAM,EAAE,KAAK1B,KAAL,CAAWE,IAAX,CAAgByB,OAAhB,CAAwBC,IAAxB,EAFG;AAGXvB,QAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWK,KAAX,CAAiBwB,MAHb;AAIX1B,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,CAAiB2B,SAJb;AAKXC,QAAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWE,IAAX,CAAgB6B,SALhB;AAMXC,QAAAA,WAAW,EAAE,KAAKhC,KAAL,CAAWE,IAAX,CAAgB8B,WANlB;AAOX5B,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAPP;AAQX6B,QAAAA,aAAa,EAAE,KAAKjC,KAAL,CAAWE,IAAX,CAAgB+B,aARpB;AASXC,QAAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWE,IAAX,CAAgBgC;AAThB,OAAb;AAWA,aAAOhC,IAAP;AACD,KA9HqC;AAAA;;AAUtCiC,EAAAA,iBAAiB,GAAG;AAClBhB,IAAAA,KAAK,CAACrB,OAAO,cAAO,KAAKsC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBhC,EAA/B,CAAR,CAAL,CACGiC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,IAAI,IACR,KAAKjC,QAAL,CAAc;AACZP,MAAAA,IAAI,EAAEwC,IAAI,CAACC,UADC;AAEZxC,MAAAA,KAAK,EAAEuC,IAAI,CAACC,UAAL,CAAgBC,UAFX;AAGZxC,MAAAA,KAAK,EAAEsC,IAAI,CAACC,UAAL,CAAgBE,UAAhB,CAA2B,CAA3B,CAHK;AAIZxC,MAAAA,KAAK,EAAEqC,IAAI,CAACI,QAAL,CAAcC,SAJT;AAKZzC,MAAAA,EAAE,EAAEoC,IAAI,CAACpC;AALG,KAAd,CAHJ;AAWD,GAtBqC,CAwBtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAsEA0C,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKhD,KAAL,CAAWE,IAAX,CAAgBuB,KAA3C,CADF,EAEE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,GAAG,EAAE,KAAKzB,KAAL,CAAWG,KAAX,CAAiB2B,SAFxB;AAGE,MAAA,GAAG,EAAE,KAAK9B,KAAL,CAAWE,IAAX,CAAgBuB,KAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B,KAAKzB,KAAL,CAAWE,IAAX,CAAgByB,OAA5C,CAPF,EAQE;AAAG,MAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+B,KAAK3B,KAAL,CAAWK,KAAX,CAAiBwB,MAAhD,CARF,EASE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAK7B,KAAL,CAAWE,IAAX,CAAgB6B,SAD9B,CATF,EAYE;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACc,KAAK/B,KAAL,CAAWE,IAAX,CAAgB+B,aAD9B,CAZF,EAeE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACe,KAAKjC,KAAL,CAAWE,IAAX,CAAgBgC,SAD/B,CAfF,EAkBE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoC,KAAKlC,KAAL,CAAWI,KAA/C,CAlBF,EAmBE;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,uBAAuB,EAAE;AAAE6C,QAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWE,IAAX,CAAgB8B;AAA1B,OAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,EAuBE;AAAQ,MAAA,OAAO,EAAE,KAAKzB,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvBF,CADF;AA2BD;;AA5JqC;;AA+JxC,eAAeR,eAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  state = {\n    clicked: false,\n    book: [],\n    image: {},\n    genre: [],\n    price: {},\n    id: \"\"\n  };\n\n  componentDidMount() {\n    fetch(BASEURL + `/${this.props.match.params.id}`)\n      .then(resp => resp.json())\n      .then(data =>\n        this.setState({\n          book: data.volumeInfo,\n          image: data.volumeInfo.imageLinks,\n          genre: data.volumeInfo.categories[0],\n          price: data.saleInfo.listPrice,\n          id: data.id\n        })\n      );\n  }\n\n  // renderCartButton = () => {\n  //   if (!localStorage.getItem(\"basket\").includes(this.state.id)) {\n  //     return (\n  //       <>\n  //         <button onClick={this.handleCartClick}> Add to Cart </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\n  //           <button> View Cart </button>\n  //         </Link>\n  //       </>\n  //     );\n  //   }\n  // };\n\n  // renderWishButton = () => {\n  //   if (!localStorage.getItem(\"basket\").includes(this.state.id)) {\n  //     return (\n  //       <>\n  //         <button onClick={this.handleWishClick}> Add to WishList </button>\n  //       </>\n  //     );\n  //   } else {\n  //     return (\n  //       <>\n  //         <Link to=\"/wishlists\" style={{ textDecoration: \"none\" }}>\n  //           <button> View WishList </button>{\" \"}\n  //         </Link>\n  //       </>\n  //     );\n  //   }\n  // };\n\n  handleCartClick = e => {\n    this.setState({\n      clicked: true\n    });\n    console.log(\"Clicked\");\n\n    const cartbook = {\n      cart_id: 1,\n      book_id: this.state.book.id\n    };\n\n    e.preventDefault();\n\n    this.addBookToServer(this.setBookDetails());\n    this.addBookToCartOnServer(cartbook);\n  };\n\n  addBookToServer = book => {\n    return fetch(`http://localhost:3000/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    });\n  };\n\n  addBookToCartOnServer = cartbook => {\n    return fetch(`http://localhost:3000/cart_books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(cartbook)\n    });\n  };\n\n  // handleWishClick = e => {\n  //   console.log(\"Clicked\");\n  //   e.preventDefault();\n  //   this.addBookToServerWishlist(this.setBookDetails());\n  // };\n  //\n  // addBookToServerWishlist = book => {\n  //   return fetch(`http://localhost:3000/wishlists`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify(book)\n  //   }).then(resp => resp.json());\n  // };\n\n  setBookDetails = () => {\n    const book = {\n      title: this.state.book.title,\n      author: this.state.book.authors.join(),\n      price: this.state.price.amount,\n      image: this.state.image.thumbnail,\n      publisher: this.state.book.publisher,\n      description: this.state.book.description,\n      genre: this.state.genre,\n      publishedDate: this.state.book.publishedDate,\n      pageCount: this.state.book.pageCount\n    };\n    return book;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"bookTitle\">{this.state.book.title}</h1>\n        <img\n          className=\"bookImage\"\n          src={this.state.image.thumbnail}\n          alt={this.state.book.title}\n        />\n        <h2 className=\"bookAuthor\">{this.state.book.authors}</h2>\n        <p className=\"bookPriceLink\">£{this.state.price.amount}</p>\n        <h3 className=\"bookPublisher\">\n          Publisher: {this.state.book.publisher}\n        </h3>\n        <h4 className=\"bookPublishedDate\">\n          Published: {this.state.book.publishedDate}\n        </h4>\n        <h6 className=\"bookPageCount\">\n          Page Count: {this.state.book.pageCount}\n        </h6>\n        <h6 className=\"bookGenre\"> Genres: {this.state.genre}</h6>\n        <p\n          className=\"bookDescription\"\n          dangerouslySetInnerHTML={{ __html: this.state.book.description }}\n        />\n        <button onClick={this.handleCartClick}> Add to Cart </button>\n      </div>\n    );\n  }\n}\n\nexport default BookInformation;\n"]},"metadata":{},"sourceType":"module"}