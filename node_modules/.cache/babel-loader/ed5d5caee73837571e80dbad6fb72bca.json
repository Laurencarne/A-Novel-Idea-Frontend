{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\";\nimport Orders from \"../components/Orders\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Fiction from \"../components/Fiction\";\nimport BookInformation from \"../components/BookInformation\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.fetchBooksFromSever = () => {\n      return fetch(BASEURL + '?q=\"\"&printType=books&orderBy=newest&maxResults=40&langRestrict=en').then(resp => resp.json());\n    };\n\n    this.addVerifiedBooksToState = () => {\n      this.fetchBooksFromSever().then(data.forEach(book => {\n        if (book.items.saleInfo.listPrice) {\n          this.setState({\n            books: [...this.state.books, book]\n          });\n        }\n      }));\n    };\n\n    this.fetchFilteredBooksFromServer = genre => {\n      return fetch(BASEURL + \"?q=%22%22+subject:\".concat(genre, \"&printType=books&orderBy=newest&maxResults=40&langRestrict=en\")).then(resp => resp.json()).then(data => this.setState({\n        [genre]: data.items\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.fetchBooksFromSever();\n    this.fetchFilteredBooksFromServer(\"fiction\");\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books\",\n      exact: true,\n      render: () => React.createElement(Books, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/fiction\",\n      exact: true,\n      render: () => React.createElement(Fiction, {\n        books: this.state.fiction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books/:id\",\n      exact: true,\n      component: BookInformation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/orders\",\n      exact: true,\n      component: Orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/wishlists\",\n      exact: true,\n      component: Wishlists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","NavBar","Footer","Home","Orders","Wishlists","Books","Fiction","BookInformation","BASEURL","App","state","books","fetchBooksFromSever","fetch","then","resp","json","addVerifiedBooksToState","data","forEach","book","items","saleInfo","listPrice","setState","fetchFilteredBooksFromServer","genre","componentDidMount","render","fiction"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\";\nimport Orders from \"../components/Orders\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Fiction from \"../components/Fiction\";\nimport BookInformation from \"../components/BookInformation\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    this.fetchBooksFromSever();\n    this.fetchFilteredBooksFromServer(\"fiction\");\n  }\n\n  fetchBooksFromSever = () => {\n    return fetch(\n      BASEURL +\n        '?q=\"\"&printType=books&orderBy=newest&maxResults=40&langRestrict=en'\n    ).then(resp => resp.json());\n  };\n\n  // addVerifiedBooksToState = () => {\n  //   fetchFilteredBooksFromServer().then(if (data.items.volumeInfo.title && data.items.volumeInfo.authors && data.items.volumeInfo.publisher && data.items.volumeInfo.publishedDate && data.items.volumeInfo.description && data.items.volumeInfo.imageLinks && data.items.saleInfo.listPrice && data.items.searchInfo.textSnippet) {\n  //     data => this.setState({\n  //       books: data.items\n  //     }))\n  //   }\n  // }\n\n  addVerifiedBooksToState = () => {\n    this.fetchBooksFromSever().then(\n      data.forEach(book => {\n        if (book.items.saleInfo.listPrice) {\n          this.setState({\n            books: [...this.state.books, book]\n          });\n        }\n      })\n    );\n  };\n\n  fetchFilteredBooksFromServer = genre => {\n    return fetch(\n      BASEURL +\n        `?q=%22%22+subject:${genre}&printType=books&orderBy=newest&maxResults=40&langRestrict=en`\n    )\n      .then(resp => resp.json())\n      .then(data => this.setState({ [genre]: data.items }));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/books\"\n              exact\n              render={() => <Books books={this.state.books} />}\n            />\n            <Route\n              path=\"/fiction\"\n              exact\n              render={() => <Fiction books={this.state.fiction} />}\n            />\n            <Route path=\"/books/:id\" exact component={BookInformation} />\n            <Route path=\"/orders\" exact component={Orders} />\n            <Route path=\"/wishlists\" exact component={Wishlists} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}