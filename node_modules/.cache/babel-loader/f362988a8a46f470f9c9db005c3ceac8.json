{"ast":null,"code":"const saveGenre = (books, category) => {\n  return books.filter(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      return book.volumeInfo.categories.includes(category);\n    }\n  });\n};\n\nconst tryingSomethingOut = getGenres => {\n  for (var i = 0; i < array.length; i++) {\n    array[i];\n  }\n};\n\nconst getGenres = books => {\n  let genres = [];\n  books.forEach(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      genres = [...genres, ...book.volumeInfo.categories];\n    }\n  });\n  return [...new Set(genres)];\n};\n\nexport { saveGenre, getGenres };","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/Filter.js"],"names":["saveGenre","books","category","filter","book","volumeInfo","categories","includes","tryingSomethingOut","getGenres","i","array","length","genres","forEach","Set"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAI;AAC1B,QAAIA,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBC,UAAvC,EAAmD;AACjD,aAAOF,IAAI,CAACC,UAAL,CAAgBC,UAAhB,CAA2BC,QAA3B,CAAoCL,QAApC,CAAP;AACD;AACF,GAJM,CAAP;AAKD,CAND;;AAQA,MAAMM,kBAAkB,GAAGC,SAAS,IAAI;AACtC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,KAAK,CAACC,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AACrCC,IAAAA,KAAK,CAACD,CAAD,CAAL;AACD;AACF,CAJD;;AAMA,MAAMD,SAAS,GAAGR,KAAK,IAAI;AACzB,MAAIY,MAAM,GAAG,EAAb;AACAZ,EAAAA,KAAK,CAACa,OAAN,CAAcV,IAAI,IAAI;AACpB,QAAIA,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBC,UAAvC,EAAmD;AACjDO,MAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAY,GAAGT,IAAI,CAACC,UAAL,CAAgBC,UAA/B,CAAT;AACD;AACF,GAJD;AAKA,SAAO,CAAC,GAAG,IAAIS,GAAJ,CAAQF,MAAR,CAAJ,CAAP;AACD,CARD;;AASA,SAASb,SAAT,EAAoBS,SAApB","sourcesContent":["const saveGenre = (books, category) => {\n  return books.filter(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      return book.volumeInfo.categories.includes(category);\n    }\n  });\n};\n\nconst tryingSomethingOut = getGenres => {\n  for (var i = 0; i < array.length; i++) {\n    array[i];\n  }\n};\n\nconst getGenres = books => {\n  let genres = [];\n  books.forEach(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      genres = [...genres, ...book.volumeInfo.categories];\n    }\n  });\n  return [...new Set(genres)];\n};\nexport { saveGenre, getGenres };\n"]},"metadata":{},"sourceType":"module"}