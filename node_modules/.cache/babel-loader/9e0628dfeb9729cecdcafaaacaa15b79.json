{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false,\n      book: [],\n      image: {},\n      genre: [],\n      price: {}\n    };\n\n    this.addVerifiedBooksToState = () => {\n      return data => data.items.map(book => {\n        if (book.saleInfo.listPrice && book.volumeInfo.title && book.volumeInfo.authors && book.volumeInfo.publisher && book.volumeInfo.publishedDate && book.volumeInfo.description && book.volumeInfo.imageLinks && book.searchInfo && book.searchInfo.textSnippet) {\n          this.setState({\n            books: [...this.state.books, book]\n          });\n        }\n      });\n    };\n\n    this.renderCartButton = () => {\n      if (!this.props.usersCart.map(book => book.google_id).includes(this.props.match.params.id)) {\n        return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          onClick: this.handleCartClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \" Add to Cart \"));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(Link, {\n          to: \"/cart\",\n          style: {\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, \" View Cart \")));\n      }\n    };\n\n    this.renderWishButton = () => {\n      if (!this.props.usersWishlist.map(book => book.google_id).includes(this.props.match.params.id)) {\n        return React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          onClick: this.handleWishClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \" Add to WishList \"));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(Link, {\n          to: \"/wishlists\",\n          style: {\n            textDecoration: \"none\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \" View WishList \")));\n      }\n    };\n\n    this.handleCartClick = e => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n      e.preventDefault();\n      this.addBookToServer(this.setCartBookDetails());\n    };\n\n    this.addBookToServer = book => {\n      return fetch(\"http://localhost:3000/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      }).then(resp => resp.json()).then(data => this.props.updateCart(data));\n    };\n\n    this.handleWishClick = e => {\n      this.setState({\n        clicked: !this.state.clicked\n      });\n      e.preventDefault();\n      this.addBookToServerWishlist(this.setWishlistBookDetails());\n    };\n\n    this.addBookToServerWishlist = book => {\n      return fetch(\"http://localhost:3000/books\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(book)\n      }).then(resp => resp.json()).then(data => this.props.updateWishlist(data));\n    };\n\n    this.setWishlistBookDetails = () => {\n      const book = {\n        book: {\n          wishlist_id: this.props.currentUser.wishlist.id,\n          google_id: this.props.match.params.id,\n          title: this.state.book.title,\n          author: this.state.book.authors.join(),\n          price: this.state.price.amount,\n          image: this.state.image.thumbnail,\n          publisher: this.state.book.publisher,\n          description: this.state.book.description,\n          genre: this.state.genre,\n          publishedDate: this.state.book.publishedDate,\n          pageCount: this.state.book.pageCount\n        }\n      };\n      return book;\n    };\n\n    this.setCartBookDetails = () => {\n      const book = {\n        book: {\n          cart_id: this.props.currentUser.cart.id,\n          google_id: this.props.match.params.id,\n          title: this.state.book.title,\n          author: this.state.book.authors.join(),\n          price: this.state.price.amount,\n          image: this.state.image.thumbnail,\n          publisher: this.state.book.publisher,\n          description: this.state.book.description,\n          genre: this.state.genre,\n          publishedDate: this.state.book.publishedDate,\n          pageCount: this.state.book.pageCount\n        }\n      };\n      return book;\n    };\n  }\n\n  componentDidMount() {\n    return fetch(BASEURL + \"/\".concat(this.props.match.params.id)).then(resp => resp.json()).then(data => {\n      if ( // data.volumeInfo &&\n      data.volumeInfo.imageLinks && data.volumeInfo.categories && data.searchInfo && data.saleInfo.listPrice) {\n        this.setState({\n          book: data.volumeInfo,\n          image: data.volumeInfo.imageLinks,\n          genre: data.volumeInfo.categories[0],\n          price: data.saleInfo.listPrice\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"bookTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.state.book.title), React.createElement(\"img\", {\n      className: \"bookImage\",\n      src: this.state.image.thumbnail,\n      alt: this.state.book.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      className: \"bookAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.book.authors), React.createElement(\"p\", {\n      className: \"bookPriceLink\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \"\\xA3\", this.state.price.amount), React.createElement(\"h3\", {\n      className: \"bookPublisher\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Publisher: \", this.state.book.publisher), React.createElement(\"h4\", {\n      className: \"bookPublishedDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Published: \", this.state.book.publishedDate), React.createElement(\"h6\", {\n      className: \"bookPageCount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"Page Count: \", this.state.book.pageCount), React.createElement(\"h6\", {\n      className: \"bookGenre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, \" Genres: \", this.state.genre), React.createElement(\"p\", {\n      className: \"bookDescription\",\n      dangerouslySetInnerHTML: {\n        __html: this.state.book.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), this.renderWishButton(), this.renderCartButton());\n  }\n\n}\n\nexport default BookInformation;","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/BookInformation.js"],"names":["React","Component","Link","BASEURL","BookInformation","state","clicked","book","image","genre","price","addVerifiedBooksToState","data","items","map","saleInfo","listPrice","volumeInfo","title","authors","publisher","publishedDate","description","imageLinks","searchInfo","textSnippet","setState","books","renderCartButton","props","usersCart","google_id","includes","match","params","id","handleCartClick","textDecoration","renderWishButton","usersWishlist","handleWishClick","e","preventDefault","addBookToServer","setCartBookDetails","fetch","method","headers","body","JSON","stringify","then","resp","json","updateCart","addBookToServerWishlist","setWishlistBookDetails","updateWishlist","wishlist_id","currentUser","wishlist","author","join","amount","thumbnail","pageCount","cart_id","cart","componentDidMount","categories","render","__html"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass BookInformation extends Component {\n  state = {\n    clicked: false,\n    book: [],\n    image: {},\n    genre: [],\n    price: {}\n  };\n\n  componentDidMount() {\n    return fetch(BASEURL + `/${this.props.match.params.id}`)\n      .then(resp => resp.json())\n      .then(data => {\n        if (\n          // data.volumeInfo &&\n          data.volumeInfo.imageLinks &&\n          data.volumeInfo.categories &&\n          data.searchInfo &&\n          data.saleInfo.listPrice\n        ) {\n          this.setState({\n            book: data.volumeInfo,\n            image: data.volumeInfo.imageLinks,\n            genre: data.volumeInfo.categories[0],\n            price: data.saleInfo.listPrice\n          });\n        }\n      });\n  }\n\n  addVerifiedBooksToState = () => {\n    return data =>\n      data.items.map(book => {\n        if (\n          book.saleInfo.listPrice &&\n          book.volumeInfo.title &&\n          book.volumeInfo.authors &&\n          book.volumeInfo.publisher &&\n          book.volumeInfo.publishedDate &&\n          book.volumeInfo.description &&\n          book.volumeInfo.imageLinks &&\n          book.searchInfo &&\n          book.searchInfo.textSnippet\n        ) {\n          this.setState({\n            books: [...this.state.books, book]\n          });\n        }\n      });\n  };\n\n  renderCartButton = () => {\n    if (\n      !this.props.usersCart\n        .map(book => book.google_id)\n        .includes(this.props.match.params.id)\n    ) {\n      return (\n        <>\n          <button onClick={this.handleCartClick}> Add to Cart </button>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Link to=\"/cart\" style={{ textDecoration: \"none\" }}>\n            <button> View Cart </button>\n          </Link>\n        </>\n      );\n    }\n  };\n\n  renderWishButton = () => {\n    if (\n      !this.props.usersWishlist\n        .map(book => book.google_id)\n        .includes(this.props.match.params.id)\n    ) {\n      return (\n        <>\n          <button onClick={this.handleWishClick}> Add to WishList </button>\n        </>\n      );\n    } else {\n      return (\n        <>\n          <Link to=\"/wishlists\" style={{ textDecoration: \"none\" }}>\n            <button> View WishList </button>\n          </Link>\n        </>\n      );\n    }\n  };\n\n  handleCartClick = e => {\n    this.setState({\n      clicked: !this.state.clicked\n    });\n\n    e.preventDefault();\n\n    this.addBookToServer(this.setCartBookDetails());\n  };\n\n  addBookToServer = book => {\n    return fetch(`http://localhost:3000/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    })\n      .then(resp => resp.json())\n      .then(data => this.props.updateCart(data));\n  };\n\n  handleWishClick = e => {\n    this.setState({\n      clicked: !this.state.clicked\n    });\n\n    e.preventDefault();\n\n    this.addBookToServerWishlist(this.setWishlistBookDetails());\n  };\n\n  addBookToServerWishlist = book => {\n    return fetch(`http://localhost:3000/books`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    })\n      .then(resp => resp.json())\n      .then(data => this.props.updateWishlist(data));\n  };\n\n  setWishlistBookDetails = () => {\n    const book = {\n      book: {\n        wishlist_id: this.props.currentUser.wishlist.id,\n        google_id: this.props.match.params.id,\n        title: this.state.book.title,\n        author: this.state.book.authors.join(),\n        price: this.state.price.amount,\n        image: this.state.image.thumbnail,\n        publisher: this.state.book.publisher,\n        description: this.state.book.description,\n        genre: this.state.genre,\n        publishedDate: this.state.book.publishedDate,\n        pageCount: this.state.book.pageCount\n      }\n    };\n    return book;\n  };\n\n  setCartBookDetails = () => {\n    const book = {\n      book: {\n        cart_id: this.props.currentUser.cart.id,\n        google_id: this.props.match.params.id,\n        title: this.state.book.title,\n        author: this.state.book.authors.join(),\n        price: this.state.price.amount,\n        image: this.state.image.thumbnail,\n        publisher: this.state.book.publisher,\n        description: this.state.book.description,\n        genre: this.state.genre,\n        publishedDate: this.state.book.publishedDate,\n        pageCount: this.state.book.pageCount\n      }\n    };\n    return book;\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"bookTitle\">{this.state.book.title}</h1>\n        <img\n          className=\"bookImage\"\n          src={this.state.image.thumbnail}\n          alt={this.state.book.title}\n        />\n        <h2 className=\"bookAuthor\">{this.state.book.authors}</h2>\n        <p className=\"bookPriceLink\">£{this.state.price.amount}</p>\n        <h3 className=\"bookPublisher\">\n          Publisher: {this.state.book.publisher}\n        </h3>\n        <h4 className=\"bookPublishedDate\">\n          Published: {this.state.book.publishedDate}\n        </h4>\n        <h6 className=\"bookPageCount\">\n          Page Count: {this.state.book.pageCount}\n        </h6>\n        <h6 className=\"bookGenre\"> Genres: {this.state.genre}</h6>\n        <p\n          className=\"bookDescription\"\n          dangerouslySetInnerHTML={{ __html: this.state.book.description }}\n        />\n        {this.renderWishButton()}\n        {this.renderCartButton()}\n      </div>\n    );\n  }\n}\n\nexport default BookInformation;\n"]},"metadata":{},"sourceType":"module"}