{"ast":null,"code":"const saveGenre = (books, category) => {\n  return books.filter(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      return book.volumeInfo.categories.includes(category);\n    }\n  });\n};\n\nconst tryingSomethingOut = (genresArr, books) => {\n  for (var i = 0; i < genresArr.length; i++) {\n    console.log(saveGenre[(books, genresArr[i])]);\n  }\n};\n\nconst getGenres = books => {\n  let genres = [];\n  books.forEach(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      genres = [...genres, ...book.volumeInfo.categories];\n    }\n  });\n  return [...new Set(genres)];\n};\n\nexport { saveGenre, getGenres, tryingSomethingOut };","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/components/Filter.js"],"names":["saveGenre","books","category","filter","book","volumeInfo","categories","includes","tryingSomethingOut","genresArr","i","length","console","log","getGenres","genres","forEach","Set"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACrC,SAAOD,KAAK,CAACE,MAAN,CAAaC,IAAI,IAAI;AAC1B,QAAIA,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBC,UAAvC,EAAmD;AACjD,aAAOF,IAAI,CAACC,UAAL,CAAgBC,UAAhB,CAA2BC,QAA3B,CAAoCL,QAApC,CAAP;AACD;AACF,GAJM,CAAP;AAKD,CAND;;AAQA,MAAMM,kBAAkB,GAAG,CAACC,SAAD,EAAYR,KAAZ,KAAsB;AAC/C,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCE,IAAAA,OAAO,CAACC,GAAR,CAAYb,SAAS,EAAEC,KAAK,EAAEQ,SAAS,CAACC,CAAD,CAAlB,EAArB;AACD;AACF,CAJD;;AAMA,MAAMI,SAAS,GAAGb,KAAK,IAAI;AACzB,MAAIc,MAAM,GAAG,EAAb;AACAd,EAAAA,KAAK,CAACe,OAAN,CAAcZ,IAAI,IAAI;AACpB,QAAIA,IAAI,CAACC,UAAL,IAAmBD,IAAI,CAACC,UAAL,CAAgBC,UAAvC,EAAmD;AACjDS,MAAAA,MAAM,GAAG,CAAC,GAAGA,MAAJ,EAAY,GAAGX,IAAI,CAACC,UAAL,CAAgBC,UAA/B,CAAT;AACD;AACF,GAJD;AAKA,SAAO,CAAC,GAAG,IAAIW,GAAJ,CAAQF,MAAR,CAAJ,CAAP;AACD,CARD;;AASA,SAASf,SAAT,EAAoBc,SAApB,EAA+BN,kBAA/B","sourcesContent":["const saveGenre = (books, category) => {\n  return books.filter(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      return book.volumeInfo.categories.includes(category);\n    }\n  });\n};\n\nconst tryingSomethingOut = (genresArr, books) => {\n  for (var i = 0; i < genresArr.length; i++) {\n    console.log(saveGenre[(books, genresArr[i])]);\n  }\n};\n\nconst getGenres = books => {\n  let genres = [];\n  books.forEach(book => {\n    if (book.volumeInfo && book.volumeInfo.categories) {\n      genres = [...genres, ...book.volumeInfo.categories];\n    }\n  });\n  return [...new Set(genres)];\n};\nexport { saveGenre, getGenres, tryingSomethingOut };\n"]},"metadata":{},"sourceType":"module"}