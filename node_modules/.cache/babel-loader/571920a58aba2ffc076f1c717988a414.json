{"ast":null,"code":"var _jsxFileName = \"/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/containers/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\"; // import Books from \"../components/Books\";\n\nimport Orders from \"../components/Orders\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Genre from \"../components/Genre\";\nimport BookInformation from \"../components/BookInformation\";\nimport { saveGenre, getGenres } from \"../components/Filter\";\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      books: []\n    };\n\n    this.fetchFilteredBooksFromServer = genre => {\n      return fetch(BASEURL + \"?q=%22%22+subject:\".concat(genre, \"&printType=books&orderBy=newest&maxResults=40&langRestrict=%22en%22\")).then(resp => resp.json()).then(data => this.setState({\n        genre: data.items\n      }));\n    };\n  }\n\n  componentDidMount() {\n    fetch(BASEURL + '?q=\"\"&printType=books&orderBy=newest&maxResults=40&langRestrict=\"en\"').then(resp => resp.json()).then(data => this.setState({\n      books: data.items\n    }));\n  }\n\n  render() {\n    const filterBooks = saveGenre(this.state.books);\n    console.log(getGenres(this.state.books));\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => React.createElement(Home, {\n        books: filterBooks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books\",\n      exact: true,\n      render: () => React.createElement(Books, {\n        books: this.state.books,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/books/:id\",\n      exact: true,\n      component: BookInformation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/orders\",\n      exact: true,\n      component: Orders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/wishlists\",\n      exact: true,\n      component: Wishlists,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/lauren/Flatiron/4-Mod/Project_Week/a-novel-idea/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Switch","NavBar","Footer","Home","Orders","Wishlists","Books","Genre","BookInformation","saveGenre","getGenres","BASEURL","App","state","books","fetchFilteredBooksFromServer","genre","fetch","then","resp","json","data","setState","items","componentDidMount","render","filterBooks","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport Footer from \"../components/Footer\";\nimport Home from \"../components/Home\";\n// import Books from \"../components/Books\";\nimport Orders from \"../components/Orders\";\nimport Wishlists from \"../components/Wishlists\";\nimport Books from \"../components/Books\";\nimport Genre from \"../components/Genre\";\nimport BookInformation from \"../components/BookInformation\";\nimport { saveGenre, getGenres } from \"../components/Filter\";\n\nconst BASEURL = \"https://www.googleapis.com/books/v1/volumes\";\n\nclass App extends Component {\n  state = {\n    books: []\n  };\n\n  componentDidMount() {\n    fetch(\n      BASEURL +\n        '?q=\"\"&printType=books&orderBy=newest&maxResults=40&langRestrict=\"en\"'\n    )\n      .then(resp => resp.json())\n      .then(data => this.setState({ books: data.items }));\n  }\n\n  fetchFilteredBooksFromServer = genre => {\n    return fetch(\n      BASEURL +\n        `?q=%22%22+subject:${genre}&printType=books&orderBy=newest&maxResults=40&langRestrict=%22en%22`\n    )\n      .then(resp => resp.json())\n      .then(data => this.setState({ genre: data.items }));\n  };\n\n  render() {\n    const filterBooks = saveGenre(this.state.books);\n    console.log(getGenres(this.state.books));\n\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact render={() => <Home books={filterBooks} />} />\n            <Route\n              path=\"/books\"\n              exact\n              render={() => <Books books={this.state.books} />}\n            />\n\n            <Route path=\"/books/:id\" exact component={BookInformation} />\n            <Route path=\"/orders\" exact component={Orders} />\n            <Route path=\"/wishlists\" exact component={Wishlists} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}